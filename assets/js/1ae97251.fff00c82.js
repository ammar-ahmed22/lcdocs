"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[794],{486:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>d,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var t=r(4848),i=r(8453);const s={sidebar_position:3},l="Product of Array Except Self",a={id:"medium/product_of_array_except_self",title:"Product of Array Except Self",description:"Given an integer array nums, return an array answer such that answer[i] is equal to the product of all the elements of nums except nums[i].",source:"@site/docs/medium/product_of_array_except_self.md",sourceDirName:"medium",slug:"/medium/product_of_array_except_self",permalink:"/lcdocs/medium/product_of_array_except_self",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"notesSidebar",previous:{title:"Top K Frequent Elements",permalink:"/lcdocs/medium/top_k_frequent_elements"}},o={},c=[{value:"Examples",id:"examples",level:2},{value:"Example 1",id:"example-1",level:3},{value:"Example 2",id:"example-2",level:3},{value:"Notes",id:"notes",level:2},{value:"Conceptual Idea",id:"conceptual-idea",level:3},{value:"Complexity",id:"complexity",level:3},{value:"Time",id:"time",level:4},{value:"Space",id:"space",level:4},{value:"Solution",id:"solution",level:2},{value:"Rust",id:"rust",level:3}];function u(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"product-of-array-except-self",children:"Product of Array Except Self"}),"\n",(0,t.jsxs)(n.p,{children:["Given an integer array ",(0,t.jsx)(n.code,{children:"nums"}),", return an array ",(0,t.jsx)(n.code,{children:"answer"})," such that ",(0,t.jsx)(n.code,{children:"answer[i]"})," is equal to the product of all the elements of ",(0,t.jsx)(n.code,{children:"nums"})," except ",(0,t.jsx)(n.code,{children:"nums[i]"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["The product of any prefix or suffix of ",(0,t.jsx)(n.code,{children:"nums"})," is ",(0,t.jsx)(n.strong,{children:"guaranteed"})," to fit in a ",(0,t.jsx)(n.strong,{children:"32-bit integer"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["You must write an algorithm that runs in ",(0,t.jsx)(n.code,{children:"O(n)"})," time and without using the division operation."]}),"\n",(0,t.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,t.jsx)(n.h3,{id:"example-1",children:"Example 1"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Input: nums = [1,2,3,4]"})," ",(0,t.jsx)("br",{}),"\n",(0,t.jsx)(n.code,{children:"Output: [24,12,8,6]"})]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"example-2",children:"Example 2"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Input: nums = [-1,1,0,-3,3]"})," ",(0,t.jsx)("br",{}),"\n",(0,t.jsx)(n.code,{children:"Output: [0,0,9,0,0]"})]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"notes",children:"Notes"}),"\n",(0,t.jsx)(n.h3,{id:"conceptual-idea",children:"Conceptual Idea"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"We can create prefix and suffix product arrays for the input to solve the problem"}),"\n",(0,t.jsx)(n.li,{children:"Initialize 2 arrays, prefx and suffix."}),"\n",(0,t.jsx)(n.li,{children:"The prefix array houses the products of the array before the value, the suffix array houses the products of the array after the value"}),"\n",(0,t.jsxs)(n.li,{children:["For the prefix array, we add a ",(0,t.jsx)(n.code,{children:"1"})," to the start of the array","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Iterate over the numbers and for each number multiply it with the previous value in the array"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["For the suffix array, we add a ",(0,t.jsx)(n.code,{children:"1"})," to the end of the array","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Iterate over the numbers backwards and for each number multiply it with the value ahead of it in the array"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:"Both the suffix and prefix array will be 1 longer than the input array"}),"\n",(0,t.jsx)(n.li,{children:"To get the result, initialize two pointers, one at the start of the prefix array and the other at the second value of the suffix array"}),"\n",(0,t.jsx)(n.li,{children:"Multiply the values at the pointers and add to the result array, iterate until the end of the suffix array"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"complexity",children:"Complexity"}),"\n",(0,t.jsx)(n.h4,{id:"time",children:"Time"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"We only iterate over the values once -> O(n)"}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"space",children:"Space"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["We create 2 arrays of length ",(0,t.jsx)(n.code,{children:"n"})," for the suffix and prefix -> O(n)"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"solution",children:"Solution"}),"\n",(0,t.jsx)(n.h3,{id:"rust",children:"Rust"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-rust",children:"fn product_except_self(nums: Vec<i32>) -> Vec<i32> {\n  let n = nums.len();\n  let mut prefix: Vec<i32> = vec![1; n + 1];\n  let mut suffix: Vec<i32> = vec![1; n + 1];\n  for (i, num) in nums.iter().enumerate() {\n    prefix[i + 1] = prefix[i] * num;\n  }\n  for (i, num) in nums.iter().rev().enumerate() {\n    suffix[n - i - 1] = suffix[n - i] * num;\n  }\n  let mut result: Vec<i32> = vec![];\n  for i in 1..suffix.len() {\n    result.push(prefix[i - 1] * suffix[i]);\n  }\n  return result;\n}\n"})})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>l,x:()=>a});var t=r(6540);const i={},s=t.createContext(i);function l(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);