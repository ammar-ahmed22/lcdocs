"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[976],{1512:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var o=n(4848),s=n(8453);const i={sidebar_position:1,slug:"/"},r="Introduction",c={id:"intro",title:"Introduction",description:"Here you will find all of my notes as well as code for LeetCode problems that I have solved.",source:"@site/docs/intro.md",sourceDirName:".",slug:"/",permalink:"/lcdocs/",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,slug:"/"},sidebar:"notesSidebar",next:{title:"Easy Problems",permalink:"/lcdocs/category/easy-problems"}},d={},l=[{value:"Why did I create this?",id:"why-did-i-create-this",level:2}];function a(e){const t={a:"a",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"introduction",children:"Introduction"}),"\n",(0,o.jsx)(t.p,{children:"Here you will find all of my notes as well as code for LeetCode problems that I have solved."}),"\n",(0,o.jsx)(t.h2,{id:"why-did-i-create-this",children:"Why did I create this?"}),"\n",(0,o.jsx)(t.p,{children:"I had two issues while studying LeetCode style problems:"}),"\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsx)(t.li,{children:"Lack of autocomplete and code snippets in the LeetCode editors"}),"\n",(0,o.jsx)(t.li,{children:"Making notes about how I solved the problems"}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:"To tackle these issues, I created this CLI (command-line interface) project. The CLI does two things:"}),"\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsx)(t.li,{children:"Create a dedicated environment for running and testing the problems in Rust"}),"\n",(0,o.jsx)(t.li,{children:"Create a docs page in this website where I can write down my notes."}),"\n"]}),"\n",(0,o.jsxs)(t.p,{children:["For more information about how the CLI works, checkout the GitHub ",(0,o.jsx)(t.a,{href:"https://github.com/ammar-ahmed22/lcdocs",children:"README"}),"."]})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>c});var o=n(6540);const s={},i=o.createContext(s);function r(e){const t=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(i.Provider,{value:t},e.children)}}}]);