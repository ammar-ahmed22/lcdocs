"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[502],{3708:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>l,metadata:()=>d,toc:()=>o});var s=t(4848),i=t(8453);const l={sidebar_position:7},r="Three Sum",d={id:"medium/three_sum",title:"Three Sum",description:"Given an integer array nums, return all the triplets [nums[i], nums[j], nums[k]] such that i != j, i != k, and j != k, and nums[i] + nums[j] + nums[k] == 0.",source:"@site/docs/medium/three_sum.md",sourceDirName:"medium",slug:"/medium/three_sum",permalink:"/lcdocs/medium/three_sum",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"notesSidebar",previous:{title:"Two Sum II - Input Array Is Sorted",permalink:"/lcdocs/medium/two_sum_sorted"},next:{title:"Container With Most Water",permalink:"/lcdocs/medium/container_with_most_water"}},c={},o=[{value:"Examples",id:"examples",level:2},{value:"Example 1",id:"example-1",level:3},{value:"Example 2",id:"example-2",level:3},{value:"Example 3",id:"example-3",level:3},{value:"Notes",id:"notes",level:2},{value:"Conceptual Idea",id:"conceptual-idea",level:3},{value:"Complexity",id:"complexity",level:3},{value:"Time",id:"time",level:4},{value:"Space",id:"space",level:4},{value:"Solution",id:"solution",level:2},{value:"Rust",id:"rust",level:3}];function u(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"three-sum",children:"Three Sum"}),"\n",(0,s.jsxs)(n.p,{children:["Given an integer array ",(0,s.jsx)(n.code,{children:"nums"}),", return all the triplets ",(0,s.jsx)(n.code,{children:"[nums[i], nums[j], nums[k]]"})," such that ",(0,s.jsx)(n.code,{children:"i != j"}),", ",(0,s.jsx)(n.code,{children:"i != k"}),", and ",(0,s.jsx)(n.code,{children:"j != k"}),", and ",(0,s.jsx)(n.code,{children:"nums[i] + nums[j] + nums[k] == 0"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"Notice that the solution set must not contain duplicate triplets."}),"\n",(0,s.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(n.h3,{id:"example-1",children:"Example 1"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"Input: nums = [-1,0,1,2,-1,-4]"})," ",(0,s.jsx)("br",{}),"\n",(0,s.jsx)(n.code,{children:"Output: [[-1,-1,2],[-1,0,1]]"})]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"example-2",children:"Example 2"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"Input: nums = [0,1,1]"})," ",(0,s.jsx)("br",{}),"\n",(0,s.jsx)(n.code,{children:"Output: []"})]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"example-3",children:"Example 3"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"Input: nums = [0,0,0]"})," ",(0,s.jsx)("br",{}),"\n",(0,s.jsx)(n.code,{children:"Output: [[0, 0, 0]]"})]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"notes",children:"Notes"}),"\n",(0,s.jsx)(n.h3,{id:"conceptual-idea",children:"Conceptual Idea"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["We will use the same principle as ",(0,s.jsx)(n.a,{href:"/lcdocs/medium/two_sum_sorted",children:"Two Sum Sorted"}),", sort the input array"]}),"\n",(0,s.jsx)(n.li,{children:"Iterate up to second last item"}),"\n",(0,s.jsxs)(n.li,{children:["On each iteration, start off by checking if this number is a duplicate (we only want the last one)","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["e.g. ",(0,s.jsx)(n.code,{children:"[0, 0, 1, 2]"}),", we want to start at the 2nd ",(0,s.jsx)(n.code,{children:"0"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Once we get to the last duplicate, initialize 2 pointers, one right in front of the current value (",(0,s.jsx)(n.code,{children:"left"}),") and the other at the end of the array (",(0,s.jsx)(n.code,{children:"right"}),")","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Iterate while ",(0,s.jsx)(n.code,{children:"left < right"}),",","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Check if the 3 numbers sum to 0","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Add to result array"}),"\n",(0,s.jsx)(n.li,{children:"Move the pointers until they are not duplicates"}),"\n",(0,s.jsx)(n.li,{children:"Move both pointers"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"If the sum is less than 0, move the left pointer"}),"\n",(0,s.jsx)(n.li,{children:"If the sum is greater than 0, move right pointer"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"complexity",children:"Complexity"}),"\n",(0,s.jsx)(n.h4,{id:"time",children:"Time"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Sorting input array -> O(n logn)"}),"\n",(0,s.jsx)(n.li,{children:"Iterating over the numbers -> O(n)"}),"\n",(0,s.jsx)(n.li,{children:"Results in O(n logn)"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"space",children:"Space"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"no new space created, O(1)"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"solution",children:"Solution"}),"\n",(0,s.jsx)(n.h3,{id:"rust",children:"Rust"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rust",children:"fn three_sum(nums: Vec<i32>) -> Vec<Vec<i32>> {\n    let mut sorted = nums.clone();\n    sorted.sort();\n    let mut result: Vec<Vec<i32>> = Vec::new();\n    let n = sorted.len();\n\n    for i in 0..n-2 {\n      if i > 0 && sorted[i] == sorted[i - 1] {\n        continue;\n      }\n      let mut l = i + 1;\n      let mut r = n - 1;\n      while l < r {\n        let sum = sorted[i] + sorted[l] + sorted[r];\n        if sum == 0 {\n          result.push(vec![sorted[i], sorted[l], sorted[r]]);\n          while l < r && sorted[l] == sorted[l + 1] {\n            l += 1;\n          }\n          while l < r && sorted[r] == sorted[r - 1] {\n            r -= 1;\n          }\n          l += 1;\n          r -= 1;\n        } else if sum < 0 {\n          l += 1;\n        } else {\n          r -= 1;\n        }\n      }\n    }\n    return result;\n}\n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>d});var s=t(6540);const i={},l=s.createContext(i);function r(e){const n=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);