"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[786],{3393:(e,n,l)=>{l.r(n),l.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>o});var i=l(4848),t=l(8453);const r={sidebar_position:5},a="Valid Palindrome",s={id:"easy/valid_palindrome",title:"Valid Palindrome",description:"A phrase is a palindrome if, after converting all uppercase letters into lowercase letters and removing all non-alphanumeric characters, it reads the same forward and backward. Alphanumeric characters include letters and numbers.",source:"@site/docs/easy/valid_palindrome.md",sourceDirName:"easy",slug:"/easy/valid_palindrome",permalink:"/lcdocs/easy/valid_palindrome",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"notesSidebar",previous:{title:"Valid Parentheses",permalink:"/lcdocs/easy/valid_parentheses"},next:{title:"Binary Search",permalink:"/lcdocs/easy/binary_search"}},c={},o=[{value:"Examples",id:"examples",level:2},{value:"Example 1",id:"example-1",level:3},{value:"Example 2",id:"example-2",level:3},{value:"Example 3",id:"example-3",level:3},{value:"Notes",id:"notes",level:2},{value:"Conceptual Idea",id:"conceptual-idea",level:3},{value:"Complexity",id:"complexity",level:3},{value:"Time",id:"time",level:4},{value:"Space",id:"space",level:4},{value:"Solution",id:"solution",level:2},{value:"Rust",id:"rust",level:3}];function d(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"valid-palindrome",children:"Valid Palindrome"}),"\n",(0,i.jsxs)(n.p,{children:["A phrase is a ",(0,i.jsx)(n.strong,{children:"palindrome"})," if, after converting all uppercase letters into lowercase letters and removing all non-alphanumeric characters, it reads the same forward and backward. Alphanumeric characters include letters and numbers."]}),"\n",(0,i.jsxs)(n.p,{children:["Given a string ",(0,i.jsx)(n.code,{children:"s"}),", return ",(0,i.jsx)(n.code,{children:"true"})," if it is a ",(0,i.jsx)(n.strong,{children:"palindrome"}),", or ",(0,i.jsx)(n.code,{children:"false"})," otherwise."]}),"\n",(0,i.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(n.h3,{id:"example-1",children:"Example 1"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:'Input: s = "A man, a plan, a canal: Panama"'})," ",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.code,{children:"Output: true"})]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"example-2",children:"Example 2"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:'Input: s = "race a car"'})," ",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.code,{children:"Output: false"})]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"example-3",children:"Example 3"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:'Input: s = " "'})," ",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.code,{children:"Output: true"})]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"notes",children:"Notes"}),"\n",(0,i.jsx)(n.h3,{id:"conceptual-idea",children:"Conceptual Idea"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Initialize two pointers, one at the start and one at the end"}),"\n",(0,i.jsxs)(n.li,{children:["Iterate while the left pointer is less than or equal to the right (no crossover)","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"On each iteration, check if the value at the left pointer is alpha numeric, if it it's not keep moving it until it is. Same thing with the right (move backwards)"}),"\n",(0,i.jsx)(n.li,{children:"Compare the left and right values, if they are not the same, return false"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Get to the end, return true"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"complexity",children:"Complexity"}),"\n",(0,i.jsx)(n.h4,{id:"time",children:"Time"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Only iterate over the input once -> O(n)"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"space",children:"Space"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"No new space created -> O(1)"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"solution",children:"Solution"}),"\n",(0,i.jsx)(n.h3,{id:"rust",children:"Rust"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-rust",children:"fn is_palindrome(s: String) -> bool {\n  let mut l = 0 as usize;\n  let mut r = s.len() - 1;\n  let lowercase = s.to_lowercase();\n  while l <= r {\n    let left = lowercase.chars().nth(l).unwrap();\n    let right = lowercase.chars().nth(r).unwrap();\n    if !left.is_alphanumeric() {\n      l += 1;\n      continue;\n    }\n\n    if !right.is_alphanumeric() {\n      r -= 1;\n      continue;\n    }\n\n    if left != right {\n      return false\n    }\n\n    l += 1;\n    r -= 1;   \n  }\n  return true;\n}\n"})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,l)=>{l.d(n,{R:()=>a,x:()=>s});var i=l(6540);const t={},r=i.createContext(t);function a(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);