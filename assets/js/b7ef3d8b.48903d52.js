"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[124],{7107:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var r=n(4848),i=n(8453);const s={sidebar_position:10},l="Daily Temperatures",a={id:"medium/daily_temperatures",title:"Daily Temperatures",description:"Given an array of integers temperatures represents the daily temperatures, return an array answer such that answer[i] is the number of days you have to wait after the ith day to get a warmer temperature. If there is no future day for which this is possible, keep answer[i] == 0 instead.",source:"@site/docs/medium/daily_temperatures.md",sourceDirName:"medium",slug:"/medium/daily_temperatures",permalink:"/lcdocs/medium/daily_temperatures",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10},sidebar:"notesSidebar",previous:{title:"Evaluate Reverse Polish Notation",permalink:"/lcdocs/medium/evaluate_reverse_polish_notation"},next:{title:"Car Fleet",permalink:"/lcdocs/medium/car_fleet"}},d={},c=[{value:"Examples",id:"examples",level:2},{value:"Example 1",id:"example-1",level:3},{value:"Example 2",id:"example-2",level:3},{value:"Example 3",id:"example-3",level:2},{value:"Notes",id:"notes",level:2},{value:"Conceptual Idea",id:"conceptual-idea",level:3},{value:"Complexity",id:"complexity",level:3},{value:"Time",id:"time",level:4},{value:"Space",id:"space",level:4},{value:"Solution",id:"solution",level:2},{value:"Rust",id:"rust",level:3}];function o(e){const t={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"daily-temperatures",children:"Daily Temperatures"}),"\n",(0,r.jsxs)(t.p,{children:["Given an array of integers ",(0,r.jsx)(t.code,{children:"temperatures"})," represents the daily temperatures, return an array ",(0,r.jsx)(t.code,{children:"answer"})," such that ",(0,r.jsx)(t.code,{children:"answer[i]"})," is the number of days you have to wait after the ",(0,r.jsx)(t.code,{children:"ith"})," day to get a warmer temperature. If there is no future day for which this is possible, keep ",(0,r.jsx)(t.code,{children:"answer[i] == 0"})," instead."]}),"\n",(0,r.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,r.jsx)(t.h3,{id:"example-1",children:"Example 1"}),"\n",(0,r.jsxs)(t.blockquote,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"Input: temperatures = [73,74,75,71,69,72,76,73]"})," ",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(t.code,{children:"Output: [1,1,4,2,1,1,0,0]"})]}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"example-2",children:"Example 2"}),"\n",(0,r.jsxs)(t.blockquote,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"Input: temperatures = [30,40,50,60]"})," ",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(t.code,{children:"Output: [1,1,1,0]"})]}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"example-3",children:"Example 3"}),"\n",(0,r.jsxs)(t.blockquote,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"Input: temperatures = [30,60,90]"})," ",(0,r.jsx)("br",{}),"\n",(0,r.jsx)(t.code,{children:"Output: [1,1,0]"})]}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"notes",children:"Notes"}),"\n",(0,r.jsx)(t.h3,{id:"conceptual-idea",children:"Conceptual Idea"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Create a stack"}),"\n",(0,r.jsx)(t.li,{children:"Initialize the result with all zeroes"}),"\n",(0,r.jsx)(t.li,{children:"Iterate over the numbers"}),"\n",(0,r.jsxs)(t.li,{children:["Do a while loop inside the iteration","\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["while the stack is ",(0,r.jsx)(t.strong,{children:"not"})," empty ",(0,r.jsx)(t.strong,{children:"AND"})," the current number is greater than the stack top"]}),"\n",(0,r.jsx)(t.li,{children:"Inside this loop, we'll update the result because we found the next day with a higher temperature"}),"\n",(0,r.jsx)(t.li,{children:"Pop from the stack and update the popped index with the difference of the indices"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(t.li,{children:"Outside of the while loop, add the current number to the stack"}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"complexity",children:"Complexity"}),"\n",(0,r.jsx)(t.h4,{id:"time",children:"Time"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"We only iterate over the numbers once"}),"\n",(0,r.jsx)(t.li,{children:"The while loop will only be, at max, the length of the largest index difference, so it's constant"}),"\n",(0,r.jsx)(t.li,{children:"O(n)"}),"\n"]}),"\n",(0,r.jsx)(t.h4,{id:"space",children:"Space"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"O(n)"}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"solution",children:"Solution"}),"\n",(0,r.jsx)(t.h3,{id:"rust",children:"Rust"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-rust",children:"fn daily_temperatures(temperatures: Vec<i32>) -> Vec<i32> {\n    let n = temperatures.len();\n    let mut stack: Vec<(i32, usize)> = Vec::new();\n    let mut result: Vec<i32> = vec![0; n];\n    for (i, curr) in temperatures.iter().enumerate() {\n      while stack.len() > 0 && curr > &stack[stack.len() - 1].0 {\n        if let Some((_, idx)) = stack.pop() {\n          result[idx] = (i - idx) as i32;\n        }\n      }\n      stack.push((*curr, i)); \n    }\n\n    return result;\n}\n"})})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>a});var r=n(6540);const i={},s=r.createContext(i);function l(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);